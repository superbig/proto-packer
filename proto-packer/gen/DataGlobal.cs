// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataGlobal.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WS.Data {

  /// <summary>Holder for reflection information generated from DataGlobal.proto</summary>
  public static partial class DataGlobalReflection {

    #region Descriptor
    /// <summary>File descriptor for DataGlobal.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataGlobalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBEYXRhR2xvYmFsLnByb3RvEgdXUy5EYXRhInwKCkRhdGFHbG9iYWwSCgoC",
            "aWQYASABKAUSEAoIc2l6ZVVuaXQYAiABKAkSFQoNc2l6ZUNvbnRhaW5lchgD",
            "IAEoCRISCgpzaXplU2hhZG93GAQgASgFEhIKCnNjZW5lU2NhbGUYBSABKAIS",
            "EQoJem9vbVNwZWVkGAYgASgCYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WS.Data.DataGlobal), global::WS.Data.DataGlobal.Parser, new[]{ "Id", "SizeUnit", "SizeContainer", "SizeShadow", "SceneScale", "ZoomSpeed" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DataGlobal : pb::IMessage<DataGlobal> {
    private static readonly pb::MessageParser<DataGlobal> _parser = new pb::MessageParser<DataGlobal>(() => new DataGlobal());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataGlobal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WS.Data.DataGlobalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataGlobal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataGlobal(DataGlobal other) : this() {
      id_ = other.id_;
      sizeUnit_ = other.sizeUnit_;
      sizeContainer_ = other.sizeContainer_;
      sizeShadow_ = other.sizeShadow_;
      sceneScale_ = other.sceneScale_;
      zoomSpeed_ = other.zoomSpeed_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataGlobal Clone() {
      return new DataGlobal(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///xuhao
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "sizeUnit" field.</summary>
    public const int SizeUnitFieldNumber = 2;
    private string sizeUnit_ = "";
    /// <summary>
    ///一个格子的长宽
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SizeUnit {
      get { return sizeUnit_; }
      set {
        sizeUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sizeContainer" field.</summary>
    public const int SizeContainerFieldNumber = 3;
    private string sizeContainer_ = "";
    /// <summary>
    ///多少个格子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SizeContainer {
      get { return sizeContainer_; }
      set {
        sizeContainer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sizeShadow" field.</summary>
    public const int SizeShadowFieldNumber = 4;
    private int sizeShadow_;
    /// <summary>
    ///块的阴影
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SizeShadow {
      get { return sizeShadow_; }
      set {
        sizeShadow_ = value;
      }
    }

    /// <summary>Field number for the "sceneScale" field.</summary>
    public const int SceneScaleFieldNumber = 5;
    private float sceneScale_;
    /// <summary>
    ///包围框是屏幕的倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SceneScale {
      get { return sceneScale_; }
      set {
        sceneScale_ = value;
      }
    }

    /// <summary>Field number for the "zoomSpeed" field.</summary>
    public const int ZoomSpeedFieldNumber = 6;
    private float zoomSpeed_;
    /// <summary>
    ///放缩速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ZoomSpeed {
      get { return zoomSpeed_; }
      set {
        zoomSpeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataGlobal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataGlobal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SizeUnit != other.SizeUnit) return false;
      if (SizeContainer != other.SizeContainer) return false;
      if (SizeShadow != other.SizeShadow) return false;
      if (SceneScale != other.SceneScale) return false;
      if (ZoomSpeed != other.ZoomSpeed) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (SizeUnit.Length != 0) hash ^= SizeUnit.GetHashCode();
      if (SizeContainer.Length != 0) hash ^= SizeContainer.GetHashCode();
      if (SizeShadow != 0) hash ^= SizeShadow.GetHashCode();
      if (SceneScale != 0F) hash ^= SceneScale.GetHashCode();
      if (ZoomSpeed != 0F) hash ^= ZoomSpeed.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (SizeUnit.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SizeUnit);
      }
      if (SizeContainer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SizeContainer);
      }
      if (SizeShadow != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SizeShadow);
      }
      if (SceneScale != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SceneScale);
      }
      if (ZoomSpeed != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ZoomSpeed);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (SizeUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SizeUnit);
      }
      if (SizeContainer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SizeContainer);
      }
      if (SizeShadow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeShadow);
      }
      if (SceneScale != 0F) {
        size += 1 + 4;
      }
      if (ZoomSpeed != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataGlobal other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.SizeUnit.Length != 0) {
        SizeUnit = other.SizeUnit;
      }
      if (other.SizeContainer.Length != 0) {
        SizeContainer = other.SizeContainer;
      }
      if (other.SizeShadow != 0) {
        SizeShadow = other.SizeShadow;
      }
      if (other.SceneScale != 0F) {
        SceneScale = other.SceneScale;
      }
      if (other.ZoomSpeed != 0F) {
        ZoomSpeed = other.ZoomSpeed;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            SizeUnit = input.ReadString();
            break;
          }
          case 26: {
            SizeContainer = input.ReadString();
            break;
          }
          case 32: {
            SizeShadow = input.ReadInt32();
            break;
          }
          case 45: {
            SceneScale = input.ReadFloat();
            break;
          }
          case 53: {
            ZoomSpeed = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
