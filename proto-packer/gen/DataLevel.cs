// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataLevel.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WS.Data {

  /// <summary>Holder for reflection information generated from DataLevel.proto</summary>
  public static partial class DataLevelReflection {

    #region Descriptor
    /// <summary>File descriptor for DataLevel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataLevelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9EYXRhTGV2ZWwucHJvdG8SB1dTLkRhdGEiYAoJRGF0YUxldmVsEgoKAmlk",
            "GAEgASgFEg8KB3N0eWxlSWQYAiABKAUSDwoHbGV2ZWxJZBgDIAEoBRITCgty",
            "ZXdhcmRNb25leRgEIAEoBRIQCghtYXBJbmRleBgFIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WS.Data.DataLevel), global::WS.Data.DataLevel.Parser, new[]{ "Id", "StyleId", "LevelId", "RewardMoney", "MapIndex" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DataLevel : pb::IMessage<DataLevel> {
    private static readonly pb::MessageParser<DataLevel> _parser = new pb::MessageParser<DataLevel>(() => new DataLevel());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WS.Data.DataLevelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataLevel(DataLevel other) : this() {
      id_ = other.id_;
      styleId_ = other.styleId_;
      levelId_ = other.levelId_;
      rewardMoney_ = other.rewardMoney_;
      mapIndex_ = other.mapIndex_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataLevel Clone() {
      return new DataLevel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///唯一标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "styleId" field.</summary>
    public const int StyleIdFieldNumber = 2;
    private int styleId_;
    /// <summary>
    ///显示风格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StyleId {
      get { return styleId_; }
      set {
        styleId_ = value;
      }
    }

    /// <summary>Field number for the "levelId" field.</summary>
    public const int LevelIdFieldNumber = 3;
    private int levelId_;
    /// <summary>
    ///关卡数据Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelId {
      get { return levelId_; }
      set {
        levelId_ = value;
      }
    }

    /// <summary>Field number for the "rewardMoney" field.</summary>
    public const int RewardMoneyFieldNumber = 4;
    private int rewardMoney_;
    /// <summary>
    ///过关奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RewardMoney {
      get { return rewardMoney_; }
      set {
        rewardMoney_ = value;
      }
    }

    /// <summary>Field number for the "mapIndex" field.</summary>
    public const int MapIndexFieldNumber = 5;
    private int mapIndex_;
    /// <summary>
    ///地图序号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapIndex {
      get { return mapIndex_; }
      set {
        mapIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StyleId != other.StyleId) return false;
      if (LevelId != other.LevelId) return false;
      if (RewardMoney != other.RewardMoney) return false;
      if (MapIndex != other.MapIndex) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (StyleId != 0) hash ^= StyleId.GetHashCode();
      if (LevelId != 0) hash ^= LevelId.GetHashCode();
      if (RewardMoney != 0) hash ^= RewardMoney.GetHashCode();
      if (MapIndex != 0) hash ^= MapIndex.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (StyleId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StyleId);
      }
      if (LevelId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LevelId);
      }
      if (RewardMoney != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RewardMoney);
      }
      if (MapIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MapIndex);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (StyleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StyleId);
      }
      if (LevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelId);
      }
      if (RewardMoney != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardMoney);
      }
      if (MapIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapIndex);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataLevel other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.StyleId != 0) {
        StyleId = other.StyleId;
      }
      if (other.LevelId != 0) {
        LevelId = other.LevelId;
      }
      if (other.RewardMoney != 0) {
        RewardMoney = other.RewardMoney;
      }
      if (other.MapIndex != 0) {
        MapIndex = other.MapIndex;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            StyleId = input.ReadInt32();
            break;
          }
          case 24: {
            LevelId = input.ReadInt32();
            break;
          }
          case 32: {
            RewardMoney = input.ReadInt32();
            break;
          }
          case 40: {
            MapIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
