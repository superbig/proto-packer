// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataLuckyBagShowData.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WS.Data {

  /// <summary>Holder for reflection information generated from DataLuckyBagShowData.proto</summary>
  public static partial class DataLuckyBagShowDataReflection {

    #region Descriptor
    /// <summary>File descriptor for DataLuckyBagShowData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataLuckyBagShowDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpEYXRhTHVja3lCYWdTaG93RGF0YS5wcm90bxIHV1MuRGF0YSKOAQoURGF0",
            "YUx1Y2t5QmFnU2hvd0RhdGESCgoCaWQYASABKAUSFAoMUHJpemVPbmVJY29u",
            "GAIgASgJEhMKC1ByaXplT25lTnVtGAMgASgJEhgKEFByaXplQXRMZWFzdElj",
            "b24YBCABKAkSFwoPUHJpemVBdExlYXN0TnVtGAUgASgFEgwKBENvc3QYBiAB",
            "KAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WS.Data.DataLuckyBagShowData), global::WS.Data.DataLuckyBagShowData.Parser, new[]{ "Id", "PrizeOneIcon", "PrizeOneNum", "PrizeAtLeastIcon", "PrizeAtLeastNum", "Cost" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DataLuckyBagShowData : pb::IMessage<DataLuckyBagShowData> {
    private static readonly pb::MessageParser<DataLuckyBagShowData> _parser = new pb::MessageParser<DataLuckyBagShowData>(() => new DataLuckyBagShowData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataLuckyBagShowData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WS.Data.DataLuckyBagShowDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataLuckyBagShowData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataLuckyBagShowData(DataLuckyBagShowData other) : this() {
      id_ = other.id_;
      prizeOneIcon_ = other.prizeOneIcon_;
      prizeOneNum_ = other.prizeOneNum_;
      prizeAtLeastIcon_ = other.prizeAtLeastIcon_;
      prizeAtLeastNum_ = other.prizeAtLeastNum_;
      cost_ = other.cost_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataLuckyBagShowData Clone() {
      return new DataLuckyBagShowData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "PrizeOneIcon" field.</summary>
    public const int PrizeOneIconFieldNumber = 2;
    private string prizeOneIcon_ = "";
    /// <summary>
    ///奖品1图标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrizeOneIcon {
      get { return prizeOneIcon_; }
      set {
        prizeOneIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PrizeOneNum" field.</summary>
    public const int PrizeOneNumFieldNumber = 3;
    private string prizeOneNum_ = "";
    /// <summary>
    ///奖品1数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrizeOneNum {
      get { return prizeOneNum_; }
      set {
        prizeOneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PrizeAtLeastIcon" field.</summary>
    public const int PrizeAtLeastIconFieldNumber = 4;
    private string prizeAtLeastIcon_ = "";
    /// <summary>
    ///奖品至少图标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrizeAtLeastIcon {
      get { return prizeAtLeastIcon_; }
      set {
        prizeAtLeastIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PrizeAtLeastNum" field.</summary>
    public const int PrizeAtLeastNumFieldNumber = 5;
    private int prizeAtLeastNum_;
    /// <summary>
    ///奖品至少数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PrizeAtLeastNum {
      get { return prizeAtLeastNum_; }
      set {
        prizeAtLeastNum_ = value;
      }
    }

    /// <summary>Field number for the "Cost" field.</summary>
    public const int CostFieldNumber = 6;
    private float cost_;
    /// <summary>
    ///奖励花费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataLuckyBagShowData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataLuckyBagShowData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PrizeOneIcon != other.PrizeOneIcon) return false;
      if (PrizeOneNum != other.PrizeOneNum) return false;
      if (PrizeAtLeastIcon != other.PrizeAtLeastIcon) return false;
      if (PrizeAtLeastNum != other.PrizeAtLeastNum) return false;
      if (Cost != other.Cost) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (PrizeOneIcon.Length != 0) hash ^= PrizeOneIcon.GetHashCode();
      if (PrizeOneNum.Length != 0) hash ^= PrizeOneNum.GetHashCode();
      if (PrizeAtLeastIcon.Length != 0) hash ^= PrizeAtLeastIcon.GetHashCode();
      if (PrizeAtLeastNum != 0) hash ^= PrizeAtLeastNum.GetHashCode();
      if (Cost != 0F) hash ^= Cost.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (PrizeOneIcon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PrizeOneIcon);
      }
      if (PrizeOneNum.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrizeOneNum);
      }
      if (PrizeAtLeastIcon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PrizeAtLeastIcon);
      }
      if (PrizeAtLeastNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PrizeAtLeastNum);
      }
      if (Cost != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Cost);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (PrizeOneIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrizeOneIcon);
      }
      if (PrizeOneNum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrizeOneNum);
      }
      if (PrizeAtLeastIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrizeAtLeastIcon);
      }
      if (PrizeAtLeastNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrizeAtLeastNum);
      }
      if (Cost != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataLuckyBagShowData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.PrizeOneIcon.Length != 0) {
        PrizeOneIcon = other.PrizeOneIcon;
      }
      if (other.PrizeOneNum.Length != 0) {
        PrizeOneNum = other.PrizeOneNum;
      }
      if (other.PrizeAtLeastIcon.Length != 0) {
        PrizeAtLeastIcon = other.PrizeAtLeastIcon;
      }
      if (other.PrizeAtLeastNum != 0) {
        PrizeAtLeastNum = other.PrizeAtLeastNum;
      }
      if (other.Cost != 0F) {
        Cost = other.Cost;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            PrizeOneIcon = input.ReadString();
            break;
          }
          case 26: {
            PrizeOneNum = input.ReadString();
            break;
          }
          case 34: {
            PrizeAtLeastIcon = input.ReadString();
            break;
          }
          case 40: {
            PrizeAtLeastNum = input.ReadInt32();
            break;
          }
          case 53: {
            Cost = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
